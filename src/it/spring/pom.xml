<?xml version="1.0" encoding="UTF-8"?>
<!--
 * SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
 * SPDX-License-Identifier: MIT
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <!--
      The version of 3.2.0 and similar requires rather high java
      version: 17 or higher. So we intentionally use the version 2.7.18
      here that requires java 11 since our plugin should be compatible with
      java 11.
    -->
    <version>2.7.18</version>
    <relativePath/>
  </parent>
  <groupId>org.eolang</groupId>
  <artifactId>jeo-spring-it</artifactId>
  <version>@project.version@</version>
  <packaging>jar</packaging>
  <description>
    Integration test that checks correct transformation of an application written with using of the Springs Framework.
    This integration test starts the application with several beans and prints results to the console.
    If you need to run only this test, use the following command:
    "mvn clean integration-test invoker:run -Dinvoker.test=spring -DskipTests"
  </description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <stack-size>256M</stack-size>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.eolang</groupId>
        <artifactId>jeo-maven-plugin</artifactId>
        <version>@project.version@</version>
        <configuration>
          <xmirVerification>true</xmirVerification>
        </configuration>
        <executions>
          <execution>
            <id>bytecode-to-eo</id>
            <phase>process-classes</phase>
            <goals>
              <goal>disassemble</goal>
            </goals>
          </execution>
          <execution>
            <id>eo-to-bytecode</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eolang</groupId>
        <artifactId>eo-maven-plugin</artifactId>
        <version>0.56.2</version>
        <executions>
          <execution>
            <id>convert-xmir-to-phi</id>
            <phase>process-classes</phase>
            <goals>
              <goal>xmir-to-phi</goal>
            </goals>
            <configuration>
              <phiInputDir>${project.build.directory}/generated-sources/jeo-xmir</phiInputDir>
              <phiOutputDir>${project.build.directory}/generated-sources/phi-jeo</phiOutputDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--
        We clean target/classes directory to be sure
        that bytecode verification works without old
        class files.
      -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>clean target</id>
            <phase>process-classes</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>target/classes</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
